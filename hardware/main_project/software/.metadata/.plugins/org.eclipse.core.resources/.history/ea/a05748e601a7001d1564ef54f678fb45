/*
 * main.c
 *
 *  Created on: 6 de feb. de 2023
 *      Author: jdelpin
 */



#include <stdio.h>
#include "IO.H"
#include "system.h"

#include "sys/alt_stdio.h"
#include "sys/alt_irq.h"



// Defines para los pulsadores
#define KEY1 1
#define KEY2 2
#define KEY3 3



volatile int * KEY_ptr = (int *) PUSHBUTTONS_BASE;  // addr pulsadores KEY

volatile int * EFFECT_ptr = (int * ) VIDEO_EFFECTS_BASE;  // addr EFFECTS


/* Rutina de interrupción de los pulsadores.
 */
void pushbutton_isr( )
{
	int press;

	alt_printf("Efectivamente me he interrumpido\n");

	press = *(KEY_ptr + 3);  // Lee el registro de los pulsadores
	*(KEY_ptr + 3) = 0x0;  // Elimina la interrupción

	if (press & 0x1) {  // Se ha pulsado el KEY0 (0001)
		alt_printf("Chroma key\n");
		/*
		*(EFFECT_ptr + 0) = 0x00000000;  // no usado
		*(EFFECT_ptr + 1) = 0x00000001;  // Efecto: Chroma Key
		*(EFFECT_ptr + 2) = 0x00000000;  // Chroma Key: H: color_key; L: color_mask
		*(EFFECT_ptr + 3) = 0x00000000;  // Chroma Key: L: color_substitute
		*/
		IOWR_32DIRECT(VIDEO_EFFECTS_BASE, 0, 0x00000000);
		IOWR_32DIRECT(VIDEO_EFFECTS_BASE, 1, 0x00000001);
		IOWR_32DIRECT(VIDEO_EFFECTS_BASE, 2, 0x00000000);
		IOWR_32DIRECT(VIDEO_EFFECTS_BASE, 3, 0x00000000);
	}
	if (press & 0x2) {  // Se ha pulsado el KEY1 (0010)
		alt_printf("Eliminación RGB\n");
		/*
		*(EFFECT_ptr + 0) = 0x00000000;  // no usado
		*(EFFECT_ptr + 1) = 0x00000102;  // Efecto: Eliminación de colores RGB. delete_rgb=1; elimina R
		*(EFFECT_ptr + 2) = 0x00000000;  // no usado
		*(EFFECT_ptr + 3) = 0x00000000;  // no usado
		*/
		IOWR_32DIRECT(VIDEO_EFFECTS_BASE, 0, 0x00000000);
		IOWR_32DIRECT(VIDEO_EFFECTS_BASE, 1, 0x00000102);
		IOWR_32DIRECT(VIDEO_EFFECTS_BASE, 2, 0x00000000);
		IOWR_32DIRECT(VIDEO_EFFECTS_BASE, 3, 0x00000000);
	}
	if (press & 0x4) {  // Se ha pulsado el KEY2 (0100)
		alt_printf("Blanco y negro\n");
		/*
		*(EFFECT_ptr + 0) = 0x00000000;  // no usado
		*(EFFECT_ptr + 1) = 0x00000004;  // Efecto: Escala de grises
		*(EFFECT_ptr + 2) = 0x00000000;  // no usado
		*(EFFECT_ptr + 3) = 0x00000000;  // no usado
		*/
		IOWR_32DIRECT(VIDEO_EFFECTS_BASE, 0, 0x00000000);
		IOWR_32DIRECT(VIDEO_EFFECTS_BASE, 1, 0x00000004);
		IOWR_32DIRECT(VIDEO_EFFECTS_BASE, 2, 0x00000000);
		IOWR_32DIRECT(VIDEO_EFFECTS_BASE, 3, 0x00000000);
	}
	if (press & 0x8) {  // Se ha pulsado el KEY3 (1000)
		alt_printf("Cuantificación\n");
		/*
		*(EFFECT_ptr + 0) = 0x00000000;  // no usado
		*(EFFECT_ptr + 1) = 0x00030008;  // Efecto: Cuantificación. cuantif_level=3; (max)
		*(EFFECT_ptr + 2) = 0x00000000;  // no usado
		*(EFFECT_ptr + 3) = 0x00000000;  // no usado
		*/
		IOWR_32DIRECT(VIDEO_EFFECTS_BASE, 0, 0x00000000);
		IOWR_32DIRECT(VIDEO_EFFECTS_BASE, 1, 0x00030008);
		IOWR_32DIRECT(VIDEO_EFFECTS_BASE, 2, 0x00000000);
		IOWR_32DIRECT(VIDEO_EFFECTS_BASE, 3, 0x00000000);
	}

	return;
}



/* Función principal
 */
int main(void)
{
	// Pulsadores
	*(KEY_ptr + 2) = 0xE;  	// Máscara de los pulsadores (keys 3210: 1110) (el 0 es reset)
	*(KEY_ptr + 3) = 0;		// Registro de los pulsadores a cero

	alt_irq_register(PUSHBUTTONS_IRQ, NULL, pushbutton_isr);  // Habilitar int. pulsadores

	*(EFFECT_ptr + 0) = 0x0;
	*(EFFECT_ptr + 1) = 0x0;
	*(EFFECT_ptr + 2) = 0x0;
	*(EFFECT_ptr + 3) = 0x0;

	alt_printf("Main finish\n");

	while (1) {}
}



