#include <ucos_ii.h>
#include "../inc/app_config.h"

int SW_value;
void TaskPoll(void *pdata){
	while(1){
		SW_value = *(SW_switch_ptr);
		*(red_LED_ptr) = (!0xC6EF)&SW_value;
		/*Activar efectos segun cada pulsador*/
		if(SW_value & 0x0001){
			*(EFFECT_ptr + 0) = 0x00000000;  // no usado
			*(EFFECT_ptr + 1) = 0x00000004;  // Efecto: Escala de grises
			*(EFFECT_ptr + 2) = 0x00000000;  // no usado
			*(EFFECT_ptr + 3) = 0x00000000;  // no usado
		}
		if(SW_value ){

		}
		switch (1){
			case 0:
				printf("Chroma\n");
				*(EFFECT_ptr + 0) = 0x00000000;  // no usado
				*(EFFECT_ptr + 1) = 0x00000001;  // Efecto: Chroma Key
				*(EFFECT_ptr + 2) = 0x780038E7;  // Chroma Key: H: color_key; L: color_mask
				*(EFFECT_ptr + 3) = 0x00000000;  // Chroma Key: L: color_substitute
				break;
			case 1:
				printf("Eliminar R\n");
				*(EFFECT_ptr + 0) = 0x00000003;  // no usado
				*(EFFECT_ptr + 1) = 0x00000102;  // Efecto: Eliminación de colores RGB. delete_rgb=1; elimina R
				*(EFFECT_ptr + 2) = 0x00000000;  // no usado
				*(EFFECT_ptr + 3) = 0x00000000;  // no usado
				break;
			case 2:
				printf("Eliminar G\n");
				*(EFFECT_ptr + 0) = 0x00000000;  // no usado
				*(EFFECT_ptr + 1) = 0x00000202;  // Efecto: Eliminación de colores RGB. delete_rgb=1; elimina R
				*(EFFECT_ptr + 2) = 0x00000000;  // no usado
				*(EFFECT_ptr + 3) = 0x00000000;  // no usado
				break;
			case 3:
				printf("Eliminar B\n");
				*(EFFECT_ptr + 0) = 0x00000000;  // no usado
				*(EFFECT_ptr + 1) = 0x00000302;  // Efecto: Eliminación de colores RGB. delete_rgb=1; elimina R
				*(EFFECT_ptr + 2) = 0x00000000;  // no usado
				*(EFFECT_ptr + 3) = 0x00000000;  // no usado
				break;
				printf("Cuantificacion 1\n");
				*(EFFECT_ptr + 0) = 0x00000000;  // no usado
				*(EFFECT_ptr + 1) = 0x00010008;  // Efecto: Cuantificación. cuantif_level=1;
				*(EFFECT_ptr + 2) = 0x00000000;  // no usado
				*(EFFECT_ptr + 3) = 0x00000000;  // no usado
				break;
			case 6:
				printf("Cuantificacion 2\n");
				*(EFFECT_ptr + 0) = 0x00000000;  // no usado
				*(EFFECT_ptr + 1) = 0x00020008;  // Efecto: Cuantificación. cuantif_level=2;
				*(EFFECT_ptr + 2) = 0x00000000;  // no usado
				*(EFFECT_ptr + 3) = 0x00000000;  // no usado
				break;
			case 7:
				printf("Cuantificacion 3\n");
				*(EFFECT_ptr + 0) = 0x00000000;  // no usado
				*(EFFECT_ptr + 1) = 0x00030008;  // Efecto: Cuantificación. cuantif_level=3; (max)
				*(EFFECT_ptr + 2) = 0x00000000;  // no usado
				*(EFFECT_ptr + 3) = 0x00000000;  // no usado
				break;
			default:
				printf("Invertir\n");
				*(EFFECT_ptr + 0) = 0x00000000;  // no usado
				*(EFFECT_ptr + 1) = 0x00000010;  // Efecto: Cuantificaci�n. cuantif_level=3; (max)
				*(EFFECT_ptr + 2) = 0x00000000;  // no usado
				*(EFFECT_ptr + 3) = 0x00000000;  // no usado
		}

		OSTaskSuspend(OS_PRIO_SELF);
	}
}
